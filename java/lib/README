These libraries are included in plume-lib and in the plume.jar file in
order to make plume-lib self-contained.  (They do make it large, though.)

TODO: To avoid the hassle of updating libraries, I should make plume-lib use Maven instead.

Most libraries are standard, downloaded from their respective webpages:

checker-qual-2.1.12.jar : http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22checker-qual%22
commons-exec-1.3.jar : https://commons.apache.org/proper/commons-exec/
commons-io-2.6.jar : https://search.maven.org/remotecontent?filepath=org/checkerframework/annotatedlib/commons-io/2.6/commons-io-2.6.jar
commons-lang3-3.6.jar : https://commons.apache.org/proper/commons-lang/
  (used by OptionsDoclet)
commons-logging-1.2.jar : https://commons.apache.org/proper/commons-logging/
commons-text-1.1.jar : https://commons.apache.org/proper/commons-text/
  (used by OptionsDoclet)
guava-20.0.jar : https://github.com/google/guava/releases but jar files
  (used by DeclarationAnnotations)
  Guava 21 and later require Java 8.
  I could use Guava's "android" variant which supports Java 7,
  but it doesn't yet have type annotations.
hamcrest-core-1.3.jar : http://search.maven.org/#search|ga|1|g%3Aorg.hamcrest
jacocoagent-0.7.9.jar : http://www.eclemma.org/jacoco/
  (used by Makefile when testing coverage.  Does not need to be in jar file.)
junit-4.12.jar : http://search.maven.org/#search|gav|1|g:"junit" AND a:"junit"
  only used when running tests, does not need to be in .jar file
options-all-0.3.1.jar : https://github.com/plume-lib/options
  uncomment and run shadowJar task
slf4j-api-1.7.25.jar : http://www.slf4j.org/download.html
slf4j-simple-1.7.25.jar : http://www.slf4j.org/download.html
utilMDE-20091207.jar : do not update
